/**
 * Embers API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Address } from "./Address";
import type { Int64 } from "./Int64";

import { AddressFromJSON, AddressToJSON } from "./Address";
import { Int64FromJSON, Int64ToJSON } from "./Int64";

/**
 *
 * @export
 * @interface TransferReq
 */
export interface TransferReq {
  /**
   *
   * @type {Int64}
   * @memberof TransferReq
   */
  amount: Int64;
  /**
   *
   * @type {string}
   * @memberof TransferReq
   */
  description?: string;
  /**
   *
   * @type {Address}
   * @memberof TransferReq
   */
  from: Address;
  /**
   *
   * @type {Address}
   * @memberof TransferReq
   */
  to: Address;
}

/**
 * Check if a given object implements the TransferReq interface.
 */
export function instanceOfTransferReq(value: object): value is TransferReq {
  if (!("from" in value) || value.from === undefined) {
    return false;
  }
  if (!("to" in value) || value.to === undefined) {
    return false;
  }
  if (!("amount" in value) || value.amount === undefined) {
    return false;
  }
  return true;
}

export function TransferReqFromJSON(json: any): TransferReq {
  return TransferReqFromJSONTyped(json, false);
}

export function TransferReqFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): TransferReq {
  if (json == null) {
    return json;
  }
  return {
    amount: Int64FromJSON(json.amount),
    description: json.description == null ? undefined : json.description,
    from: AddressFromJSON(json.from),
    to: AddressFromJSON(json.to),
  };
}

export function TransferReqToJSON(json: any): TransferReq {
  return TransferReqToJSONTyped(json, false);
}

export function TransferReqToJSONTyped(
  value?: TransferReq | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    amount: Int64ToJSON(value.amount),
    description: value.description,
    from: AddressToJSON(value.from),
    to: AddressToJSON(value.to),
  };
}
