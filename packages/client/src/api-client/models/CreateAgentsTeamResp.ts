/**
 * Embers API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Base64 } from "./Base64";

import { Base64FromJSON, Base64ToJSON } from "./Base64";

/**
 *
 * @export
 * @interface CreateAgentsTeamResp
 */
export interface CreateAgentsTeamResp {
  /**
   *
   * @type {Base64}
   * @memberof CreateAgentsTeamResp
   */
  contract: Base64;
  /**
   *
   * @type {string}
   * @memberof CreateAgentsTeamResp
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof CreateAgentsTeamResp
   */
  version: string;
}

/**
 * Check if a given object implements the CreateAgentsTeamResp interface.
 */
export function instanceOfCreateAgentsTeamResp(value: object): value is CreateAgentsTeamResp {
  if (!("id" in value) || value.id === undefined) {
    return false;
  }
  if (!("version" in value) || value.version === undefined) {
    return false;
  }
  if (!("contract" in value) || value.contract === undefined) {
    return false;
  }
  return true;
}

export function CreateAgentsTeamRespFromJSON(json: any): CreateAgentsTeamResp {
  return CreateAgentsTeamRespFromJSONTyped(json, false);
}

export function CreateAgentsTeamRespFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CreateAgentsTeamResp {
  if (json == null) {
    return json;
  }
  return {
    contract: Base64FromJSON(json.contract),
    id: json.id,
    version: json.version,
  };
}

export function CreateAgentsTeamRespToJSON(json: any): CreateAgentsTeamResp {
  return CreateAgentsTeamRespToJSONTyped(json, false);
}

export function CreateAgentsTeamRespToJSONTyped(
  value?: CreateAgentsTeamResp | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    contract: Base64ToJSON(value.contract),
    id: value.id,
    version: value.version,
  };
}
