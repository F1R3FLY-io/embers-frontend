/**
 * Embers API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Log } from "./Log";

import { LogFromJSON, LogToJSON } from "./Log";

/**
 *
 * @export
 * @interface DeploySignedTestRespSignedTestDeployLogs
 */
export interface DeploySignedTestRespSignedTestDeployLogs {
  /**
   *
   * @type {Array<Log>}
   * @memberof DeploySignedTestRespSignedTestDeployLogs
   */
  logs: Log[];
  /**
   *
   * @type {string}
   * @memberof DeploySignedTestRespSignedTestDeployLogs
   */
  type: DeploySignedTestRespSignedTestDeployLogsTypeEnum;
}

/**
 * @export
 */
export const DeploySignedTestRespSignedTestDeployLogsTypeEnum = {
  Ok: "Ok",
} as const;
export type DeploySignedTestRespSignedTestDeployLogsTypeEnum =
  (typeof DeploySignedTestRespSignedTestDeployLogsTypeEnum)[keyof typeof DeploySignedTestRespSignedTestDeployLogsTypeEnum];

/**
 * Check if a given object implements the DeploySignedTestRespSignedTestDeployLogs interface.
 */
export function instanceOfDeploySignedTestRespSignedTestDeployLogs(
  value: object,
): value is DeploySignedTestRespSignedTestDeployLogs {
  if (!("logs" in value) || value.logs === undefined) {
    return false;
  }
  if (!("type" in value) || value.type === undefined) {
    return false;
  }
  return true;
}

export function DeploySignedTestRespSignedTestDeployLogsFromJSON(
  json: any,
): DeploySignedTestRespSignedTestDeployLogs {
  return DeploySignedTestRespSignedTestDeployLogsFromJSONTyped(json, false);
}

export function DeploySignedTestRespSignedTestDeployLogsFromJSONTyped(
  json: any,
  _ignoreDiscriminator: boolean,
): DeploySignedTestRespSignedTestDeployLogs {
  if (json == null) {
    return json;
  }
  return {
    logs: (json.logs as any[]).map(LogFromJSON),
    type: json.type,
  };
}

export function DeploySignedTestRespSignedTestDeployLogsToJSON(
  json: any,
): DeploySignedTestRespSignedTestDeployLogs {
  return DeploySignedTestRespSignedTestDeployLogsToJSONTyped(json, false);
}

export function DeploySignedTestRespSignedTestDeployLogsToJSONTyped(
  value?: DeploySignedTestRespSignedTestDeployLogs | null,
  _ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    logs: (value.logs as any[]).map(LogToJSON),
    type: value.type,
  };
}
