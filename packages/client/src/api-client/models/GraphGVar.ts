/**
 * Embers API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Graph } from "./Graph";

import { GraphFromJSON, GraphToJSON } from "./Graph";

/**
 *
 * @export
 * @interface GraphGVar
 */
export interface GraphGVar {
  /**
   *
   * @type {string}
   * @memberof GraphGVar
   */
  _var: string;
  /**
   *
   * @type {Graph}
   * @memberof GraphGVar
   */
  graph: Graph;
  /**
   *
   * @type {string}
   * @memberof GraphGVar
   */
  type: GraphGVarTypeEnum;
}

/**
 * @export
 */
export const GraphGVarTypeEnum = {
  Var: "Var",
} as const;
export type GraphGVarTypeEnum =
  (typeof GraphGVarTypeEnum)[keyof typeof GraphGVarTypeEnum];

/**
 * Check if a given object implements the GraphGVar interface.
 */
export function instanceOfGraphGVar(value: object): value is GraphGVar {
  if (!("graph" in value) || value.graph === undefined) {
    return false;
  }
  if (!("_var" in value) || value._var === undefined) {
    return false;
  }
  if (!("type" in value) || value.type === undefined) {
    return false;
  }
  return true;
}

export function GraphGVarFromJSON(json: any): GraphGVar {
  return GraphGVarFromJSONTyped(json, false);
}

export function GraphGVarFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): GraphGVar {
  if (json == null) {
    return json;
  }
  return {
    _var: json.var,
    graph: GraphFromJSON(json.graph),
    type: json.type,
  };
}

export function GraphGVarToJSON(json: any): GraphGVar {
  return GraphGVarToJSONTyped(json, false);
}

export function GraphGVarToJSONTyped(
  value?: GraphGVar | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    graph: GraphToJSON(value.graph),
    type: value.type,
    var: value._var,
  };
}
