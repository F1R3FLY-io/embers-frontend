/**
 * Embers API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * @type DeploySignedTestResp
 *
 * @export
 */
export type DeploySignedTestResp =
  | ({ type: "EnvDeployFailed" } & DeploySignedTestRespEnvDeployFailed)
  | ({ type: "Ok" } & DeploySignedTestRespSignedTestDeplotLogs)
  | ({ type: "TestDeployFailed" } & DeploySignedTestRespTestDeployFailed);

export function DeploySignedTestRespFromJSON(json: any): DeploySignedTestResp {
  return DeploySignedTestRespFromJSONTyped(json, false);
}

export function DeploySignedTestRespFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): DeploySignedTestResp {
  if (json == null) {
    return json;
  }
  switch (json.type) {
    case "EnvDeployFailed":
      return Object.assign(
        {},
        DeploySignedTestRespEnvDeployFailedFromJSONTyped(json, true),
        { type: "EnvDeployFailed" } as const,
      );
    case "Ok":
      return Object.assign(
        {},
        DeploySignedTestRespSignedTestDeplotLogsFromJSONTyped(json, true),
        { type: "Ok" } as const,
      );
    case "TestDeployFailed":
      return Object.assign(
        {},
        DeploySignedTestRespTestDeployFailedFromJSONTyped(json, true),
        { type: "TestDeployFailed" } as const,
      );
    default:
      return json;
  }
}

export function DeploySignedTestRespToJSON(json: any): any {
  return DeploySignedTestRespToJSONTyped(json, false);
}

export function DeploySignedTestRespToJSONTyped(
  value?: DeploySignedTestResp | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }
  switch (value.type) {
    case "EnvDeployFailed":
      return Object.assign(
        {},
        DeploySignedTestRespEnvDeployFailedToJSON(value),
        { type: "EnvDeployFailed" } as const,
      );
    case "Ok":
      return Object.assign(
        {},
        DeploySignedTestRespSignedTestDeplotLogsToJSON(value),
        { type: "Ok" } as const,
      );
    case "TestDeployFailed":
      return Object.assign(
        {},
        DeploySignedTestRespTestDeployFailedToJSON(value),
        { type: "TestDeployFailed" } as const,
      );
    default:
      return json;
  }
}
