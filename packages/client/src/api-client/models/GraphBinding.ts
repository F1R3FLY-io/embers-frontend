/**
 * Embers API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Graph } from "./Graph";
import { GraphFromJSON, GraphToJSON } from "./Graph";
import type { Vertex } from "./Vertex";
import { VertexFromJSON, VertexToJSON } from "./Vertex";

/**
 *
 * @export
 * @interface GraphBinding
 */
export interface GraphBinding {
  /**
   *
   * @type {string}
   * @memberof GraphBinding
   */
  _var: string;
  /**
   *
   * @type {Graph}
   * @memberof GraphBinding
   */
  graph: Graph;
  /**
   *
   * @type {string}
   * @memberof GraphBinding
   */
  type: GraphBindingTypeEnum;
  /**
   *
   * @type {Vertex}
   * @memberof GraphBinding
   */
  vertex: Vertex;
}

/**
 * @export
 */
export const GraphBindingTypeEnum = {
  Nominate: "Nominate",
} as const;
export type GraphBindingTypeEnum = (typeof GraphBindingTypeEnum)[keyof typeof GraphBindingTypeEnum];

/**
 * Check if a given object implements the GraphBinding interface.
 */
export function instanceOfGraphBinding(value: object): value is GraphBinding {
  if (!("graph" in value) || value.graph === undefined) {
    return false;
  }
  if (!("_var" in value) || value._var === undefined) {
    return false;
  }
  if (!("vertex" in value) || value.vertex === undefined) {
    return false;
  }
  if (!("type" in value) || value.type === undefined) {
    return false;
  }
  return true;
}

export function GraphBindingFromJSON(json: any): GraphBinding {
  return GraphBindingFromJSONTyped(json, false);
}

export function GraphBindingFromJSONTyped(json: any, ignoreDiscriminator: boolean): GraphBinding {
  if (json == null) {
    return json;
  }
  return {
    _var: json.var,
    graph: GraphFromJSON(json.graph),
    type: json.type,
    vertex: VertexFromJSON(json.vertex),
  };
}

export function GraphBindingToJSON(json: any): GraphBinding {
  return GraphBindingToJSONTyped(json, false);
}

export function GraphBindingToJSONTyped(
  value?: GraphBinding | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    graph: GraphToJSON(value.graph),
    type: value.type,
    var: value._var,
    vertex: VertexToJSON(value.vertex),
  };
}
