/**
 * Embers API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface DeploySignedTestRespEnvDeployFailed
 */
export interface DeploySignedTestRespEnvDeployFailed {
  /**
   *
   * @type {string}
   * @memberof DeploySignedTestRespEnvDeployFailed
   */
  error: string;
  /**
   *
   * @type {string}
   * @memberof DeploySignedTestRespEnvDeployFailed
   */
  type: DeploySignedTestRespEnvDeployFailedTypeEnum;
}

/**
 * @export
 */
export const DeploySignedTestRespEnvDeployFailedTypeEnum = {
  EnvDeployFailed: "EnvDeployFailed",
} as const;
export type DeploySignedTestRespEnvDeployFailedTypeEnum =
  (typeof DeploySignedTestRespEnvDeployFailedTypeEnum)[keyof typeof DeploySignedTestRespEnvDeployFailedTypeEnum];

/**
 * Check if a given object implements the DeploySignedTestRespEnvDeployFailed interface.
 */
export function instanceOfDeploySignedTestRespEnvDeployFailed(
  value: object,
): value is DeploySignedTestRespEnvDeployFailed {
  if (!("error" in value) || value.error === undefined) {
    return false;
  }
  if (!("type" in value) || value.type === undefined) {
    return false;
  }
  return true;
}

export function DeploySignedTestRespEnvDeployFailedFromJSON(
  json: any,
): DeploySignedTestRespEnvDeployFailed {
  return DeploySignedTestRespEnvDeployFailedFromJSONTyped(json, false);
}

export function DeploySignedTestRespEnvDeployFailedFromJSONTyped(
  json: any,
  _ignoreDiscriminator: boolean,
): DeploySignedTestRespEnvDeployFailed {
  if (json == null) {
    return json;
  }
  return {
    error: json.error,
    type: json.type,
  };
}

export function DeploySignedTestRespEnvDeployFailedToJSON(
  json: any,
): DeploySignedTestRespEnvDeployFailed {
  return DeploySignedTestRespEnvDeployFailedToJSONTyped(json, false);
}

export function DeploySignedTestRespEnvDeployFailedToJSONTyped(
  value?: DeploySignedTestRespEnvDeployFailed | null,
  _ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    error: value.error,
    type: value.type,
  };
}
