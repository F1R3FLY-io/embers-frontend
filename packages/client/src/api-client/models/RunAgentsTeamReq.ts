/**
 * Embers API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Int64 } from "./Int64";

import { Int64FromJSON, Int64ToJSON } from "./Int64";

/**
 *
 * @export
 * @interface RunAgentsTeamReq
 */
export interface RunAgentsTeamReq {
  /**
   *
   * @type {string}
   * @memberof RunAgentsTeamReq
   */
  agentsTeam: string;
  /**
   *
   * @type {Int64}
   * @memberof RunAgentsTeamReq
   */
  phloLimit: Int64;
  /**
   *
   * @type {string}
   * @memberof RunAgentsTeamReq
   */
  prompt: string;
}

/**
 * Check if a given object implements the RunAgentsTeamReq interface.
 */
export function instanceOfRunAgentsTeamReq(
  value: object,
): value is RunAgentsTeamReq {
  if (!("prompt" in value) || value.prompt === undefined) {
    return false;
  }
  if (!("phloLimit" in value) || value.phloLimit === undefined) {
    return false;
  }
  if (!("agentsTeam" in value) || value.agentsTeam === undefined) {
    return false;
  }
  return true;
}

export function RunAgentsTeamReqFromJSON(json: any): RunAgentsTeamReq {
  return RunAgentsTeamReqFromJSONTyped(json, false);
}

export function RunAgentsTeamReqFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): RunAgentsTeamReq {
  if (json == null) {
    return json;
  }
  return {
    agentsTeam: json.agents_team,
    phloLimit: Int64FromJSON(json.phlo_limit),
    prompt: json.prompt,
  };
}

export function RunAgentsTeamReqToJSON(json: any): RunAgentsTeamReq {
  return RunAgentsTeamReqToJSONTyped(json, false);
}

export function RunAgentsTeamReqToJSONTyped(
  value?: RunAgentsTeamReq | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    agents_team: value.agentsTeam,
    phlo_limit: Int64ToJSON(value.phloLimit),
    prompt: value.prompt,
  };
}
