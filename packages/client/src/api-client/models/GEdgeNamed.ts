/**
 * Embers API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Binding } from "./Binding";
import { BindingFromJSON, BindingToJSON } from "./Binding";
import type { Name } from "./Name";
import { NameFromJSON, NameToJSON } from "./Name";

/**
 *
 * @export
 * @interface GEdgeNamed
 */
export interface GEdgeNamed {
  /**
   *
   * @type {Binding}
   * @memberof GEdgeNamed
   */
  binding1: Binding;
  /**
   *
   * @type {Binding}
   * @memberof GEdgeNamed
   */
  binding2: Binding;
  /**
   *
   * @type {Name}
   * @memberof GEdgeNamed
   */
  name: Name;
}

/**
 * Check if a given object implements the GEdgeNamed interface.
 */
export function instanceOfGEdgeNamed(value: object): value is GEdgeNamed {
  if (!("binding1" in value) || value.binding1 === undefined) {
    return false;
  }
  if (!("binding2" in value) || value.binding2 === undefined) {
    return false;
  }
  if (!("name" in value) || value.name === undefined) {
    return false;
  }
  return true;
}

export function GEdgeNamedFromJSON(json: any): GEdgeNamed {
  return GEdgeNamedFromJSONTyped(json, false);
}

export function GEdgeNamedFromJSONTyped(json: any, _ignoreDiscriminator: boolean): GEdgeNamed {
  if (json == null) {
    return json;
  }
  return {
    binding1: BindingFromJSON(json.binding_1),
    binding2: BindingFromJSON(json.binding_2),
    name: NameFromJSON(json.name),
  };
}

export function GEdgeNamedToJSON(json: any): GEdgeNamed {
  return GEdgeNamedToJSONTyped(json, false);
}

export function GEdgeNamedToJSONTyped(
  value?: GEdgeNamed | null,
  _ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    binding_1: BindingToJSON(value.binding1),
    binding_2: BindingToJSON(value.binding2),
    name: NameToJSON(value.name),
  };
}
