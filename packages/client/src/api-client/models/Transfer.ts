/**
 * Embers API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Address } from "./Address";
import type { Direction } from "./Direction";
import type { Int64 } from "./Int64";
import type { UInt64 } from "./UInt64";

import { AddressFromJSON, AddressToJSON } from "./Address";
import { DirectionFromJSON, DirectionToJSON } from "./Direction";
import { Int64FromJSON, Int64ToJSON } from "./Int64";
import { UInt64FromJSON, UInt64ToJSON } from "./UInt64";

/**
 *
 * @export
 * @interface Transfer
 */
export interface Transfer {
  /**
   *
   * @type {Int64}
   * @memberof Transfer
   */
  amount: Int64;
  /**
   *
   * @type {UInt64}
   * @memberof Transfer
   */
  cost: UInt64;
  /**
   *
   * @type {string}
   * @memberof Transfer
   */
  date: string;
  /**
   *
   * @type {Direction}
   * @memberof Transfer
   */
  direction: Direction;
  /**
   *
   * @type {string}
   * @memberof Transfer
   */
  id: string;
  /**
   *
   * @type {Address}
   * @memberof Transfer
   */
  toAddress: Address;
}

/**
 * Check if a given object implements the Transfer interface.
 */
export function instanceOfTransfer(value: object): value is Transfer {
  if (!("id" in value) || value.id === undefined) {
    return false;
  }
  if (!("direction" in value) || value.direction === undefined) {
    return false;
  }
  if (!("date" in value) || value.date === undefined) {
    return false;
  }
  if (!("amount" in value) || value.amount === undefined) {
    return false;
  }
  if (!("toAddress" in value) || value.toAddress === undefined) {
    return false;
  }
  if (!("cost" in value) || value.cost === undefined) {
    return false;
  }
  return true;
}

export function TransferFromJSON(json: any): Transfer {
  return TransferFromJSONTyped(json, false);
}

export function TransferFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): Transfer {
  if (json == null) {
    return json;
  }
  return {
    amount: Int64FromJSON(json.amount),
    cost: UInt64FromJSON(json.cost),
    date: json.date,
    direction: DirectionFromJSON(json.direction),
    id: json.id,
    toAddress: AddressFromJSON(json.to_address),
  };
}

export function TransferToJSON(json: any): Transfer {
  return TransferToJSONTyped(json, false);
}

export function TransferToJSONTyped(
  value?: Transfer | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    amount: Int64ToJSON(value.amount),
    cost: UInt64ToJSON(value.cost),
    date: value.date,
    direction: DirectionToJSON(value.direction),
    id: value.id,
    to_address: AddressToJSON(value.toAddress),
  };
}
