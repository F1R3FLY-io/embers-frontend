/**
 * Embers API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Int64 } from "./Int64";

import { Int64FromJSON, Int64ToJSON } from "./Int64";

/**
 *
 * @export
 * @interface DeployAgentReqDeployAgent
 */
export interface DeployAgentReqDeployAgent {
  /**
   *
   * @type {string}
   * @memberof DeployAgentReqDeployAgent
   */
  address: string;
  /**
   *
   * @type {string}
   * @memberof DeployAgentReqDeployAgent
   */
  id: string;
  /**
   *
   * @type {Int64}
   * @memberof DeployAgentReqDeployAgent
   */
  phloLimit: Int64;
  /**
   *
   * @type {string}
   * @memberof DeployAgentReqDeployAgent
   */
  type: DeployAgentReqDeployAgentTypeEnum;
  /**
   *
   * @type {string}
   * @memberof DeployAgentReqDeployAgent
   */
  version: string;
}

/**
 * @export
 */
export const DeployAgentReqDeployAgentTypeEnum = {
  Agent: "Agent",
} as const;
export type DeployAgentReqDeployAgentTypeEnum =
  (typeof DeployAgentReqDeployAgentTypeEnum)[keyof typeof DeployAgentReqDeployAgentTypeEnum];

/**
 * Check if a given object implements the DeployAgentReqDeployAgent interface.
 */
export function instanceOfDeployAgentReqDeployAgent(
  value: object,
): value is DeployAgentReqDeployAgent {
  if (!("id" in value) || value.id === undefined) {
    return false;
  }
  if (!("version" in value) || value.version === undefined) {
    return false;
  }
  if (!("address" in value) || value.address === undefined) {
    return false;
  }
  if (!("phloLimit" in value) || value.phloLimit === undefined) {
    return false;
  }
  if (!("type" in value) || value.type === undefined) {
    return false;
  }
  return true;
}

export function DeployAgentReqDeployAgentFromJSON(
  json: any,
): DeployAgentReqDeployAgent {
  return DeployAgentReqDeployAgentFromJSONTyped(json, false);
}

export function DeployAgentReqDeployAgentFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): DeployAgentReqDeployAgent {
  if (json == null) {
    return json;
  }
  return {
    address: json.address,
    id: json.id,
    phloLimit: Int64FromJSON(json.phlo_limit),
    type: json.type,
    version: json.version,
  };
}

export function DeployAgentReqDeployAgentToJSON(
  json: any,
): DeployAgentReqDeployAgent {
  return DeployAgentReqDeployAgentToJSONTyped(json, false);
}

export function DeployAgentReqDeployAgentToJSONTyped(
  value?: DeployAgentReqDeployAgent | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    address: value.address,
    id: value.id,
    phlo_limit: Int64ToJSON(value.phloLimit),
    type: value.type,
    version: value.version,
  };
}
