/**
 * Embers API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { DeployDemoReq, RunDemoReq } from "../models/index";

import { DeployDemoReqToJSON, RunDemoReqToJSON } from "../models/index";
import * as runtime from "../runtime";

export interface ApiAiAgentsTeamsDeployDemoPostRequest {
  deployDemoReq: DeployDemoReq;
}

export interface ApiAiAgentsTeamsRunDemoPostRequest {
  runDemoReq: RunDemoReq;
}

/**
 *
 */
export class AIAgentsTeamsApi extends runtime.BaseAPI {
  /**
   */
  async apiAiAgentsTeamsDeployDemoPostRaw(
    requestParameters: ApiAiAgentsTeamsDeployDemoPostRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<void>> {
    if (requestParameters.deployDemoReq == null) {
      throw new runtime.RequiredError(
        "deployDemoReq",
        'Required parameter "deployDemoReq" was null or undefined when calling apiAiAgentsTeamsDeployDemoPost().',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters["Content-Type"] = "application/json; charset=utf-8";

    const urlPath = `/api/ai-agents-teams/deploy-demo`;

    const response = await this.request(
      {
        body: DeployDemoReqToJSON(requestParameters.deployDemoReq),
        headers: headerParameters,
        method: "POST",
        path: urlPath,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.VoidApiResponse(response);
  }

  /**
   */
  async apiAiAgentsTeamsDeployDemoPost(
    requestParameters: ApiAiAgentsTeamsDeployDemoPostRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<void> {
    await this.apiAiAgentsTeamsDeployDemoPostRaw(
      requestParameters,
      initOverrides,
    );
  }

  /**
   */
  async apiAiAgentsTeamsRunDemoPostRaw(
    requestParameters: ApiAiAgentsTeamsRunDemoPostRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<any>> {
    if (requestParameters.runDemoReq == null) {
      throw new runtime.RequiredError(
        "runDemoReq",
        'Required parameter "runDemoReq" was null or undefined when calling apiAiAgentsTeamsRunDemoPost().',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters["Content-Type"] = "application/json; charset=utf-8";

    const urlPath = `/api/ai-agents-teams/run-demo`;

    const response = await this.request(
      {
        body: RunDemoReqToJSON(requestParameters.runDemoReq),
        headers: headerParameters,
        method: "POST",
        path: urlPath,
        query: queryParameters,
      },
      initOverrides,
    );

    if (this.isJsonMime(response.headers.get("content-type"))) {
      return new runtime.JSONApiResponse<any>(response);
    }
    return new runtime.TextApiResponse(response) as any;
  }

  /**
   */
  async apiAiAgentsTeamsRunDemoPost(
    requestParameters: ApiAiAgentsTeamsRunDemoPostRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<any> {
    const response = await this.apiAiAgentsTeamsRunDemoPostRaw(
      requestParameters,
      initOverrides,
    );
    return response.value();
  }
}
