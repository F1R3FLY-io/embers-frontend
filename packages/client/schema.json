{
  "openapi": "3.0.0",
  "info": {
    "title": "Embers API",
    "version": "0.1.0"
  },
  "servers": [],
  "tags": [
    {
      "name": "AIAgents"
    },
    {
      "name": "AIAgentsTeams"
    },
    {
      "name": "Service"
    },
    {
      "name": "Testnet"
    },
    {
      "name": "Wallets"
    }
  ],
  "paths": {
    "/api/service/ready": {
      "get": {
        "tags": ["Service"],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/testnet/wallet": {
      "post": {
        "tags": ["Testnet"],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTestwalletResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/testnet/deploy/prepare": {
      "post": {
        "tags": ["Testnet"],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/DeployTestReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DeployTestResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/testnet/deploy/send": {
      "post": {
        "tags": ["Testnet"],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/DeploySignedTestReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DeploySignedTestResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/wallets/{address}/state": {
      "get": {
        "tags": ["Wallets"],
        "parameters": [
          {
            "name": "address",
            "schema": {
              "type": "string",
              "format": "blockchain-address"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/WalletStateAndHistory"
                }
              }
            }
          }
        }
      }
    },
    "/api/wallets/transfer/prepare": {
      "post": {
        "tags": ["Wallets"],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/TransferReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TransferResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/wallets/transfer/send": {
      "post": {
        "tags": ["Wallets"],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/SignedContract"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/ai-agents/{address}": {
      "get": {
        "tags": ["AIAgents"],
        "parameters": [
          {
            "name": "address",
            "schema": {
              "type": "string",
              "format": "blockchain-address"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Agents"
                }
              }
            }
          }
        }
      }
    },
    "/api/ai-agents/{address}/{id}/versions": {
      "get": {
        "tags": ["AIAgents"],
        "parameters": [
          {
            "name": "address",
            "schema": {
              "type": "string",
              "format": "blockchain-address"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Agents"
                }
              }
            }
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ai-agents/{address}/{id}/versions/{version}": {
      "get": {
        "tags": ["AIAgents"],
        "parameters": [
          {
            "name": "address",
            "schema": {
              "type": "string",
              "format": "blockchain-address"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "version",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Agent"
                }
              }
            }
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ai-agents/create/prepare": {
      "post": {
        "tags": ["AIAgents"],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/CreateAgentReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAgentResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/ai-agents/create/send": {
      "post": {
        "tags": ["AIAgents"],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/SignedContract"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/ai-agents/deploy/prepare": {
      "post": {
        "tags": ["AIAgents"],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/DeployAgentReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DeployAgentResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/ai-agents/deploy/send": {
      "post": {
        "tags": ["AIAgents"],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/SignedContract"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/ai-agents/{id}/save/prepare": {
      "post": {
        "tags": ["AIAgents"],
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/CreateAgentReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAgentResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/ai-agents/{id}/save/send": {
      "post": {
        "tags": ["AIAgents"],
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/SignedContract"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/ai-agents-teams/run-demo": {
      "post": {
        "tags": ["AIAgentsTeams"],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/RunDemoReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/ai-agents-teams/{address}": {
      "get": {
        "tags": ["AIAgentsTeams"],
        "parameters": [
          {
            "name": "address",
            "schema": {
              "type": "string",
              "format": "blockchain-address"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AgentsTeams"
                }
              }
            }
          }
        }
      }
    },
    "/api/ai-agents-teams/{address}/{id}/versions": {
      "get": {
        "tags": ["AIAgentsTeams"],
        "parameters": [
          {
            "name": "address",
            "schema": {
              "type": "string",
              "format": "blockchain-address"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AgentsTeams"
                }
              }
            }
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ai-agents-teams/{address}/{id}/versions/{version}": {
      "get": {
        "tags": ["AIAgentsTeams"],
        "parameters": [
          {
            "name": "address",
            "schema": {
              "type": "string",
              "format": "blockchain-address"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          },
          {
            "name": "version",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AgentsTeam"
                }
              }
            }
          },
          "404": {
            "description": ""
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/InternalError"
                }
              }
            }
          }
        }
      }
    },
    "/api/ai-agents-teams/create/prepare": {
      "post": {
        "tags": ["AIAgentsTeams"],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/CreateAgentsTeamReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAgentsTeamResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/ai-agents-teams/create/send": {
      "post": {
        "tags": ["AIAgentsTeams"],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/SignedContract"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/ai-agents-teams/deploy/prepare": {
      "post": {
        "tags": ["AIAgentsTeams"],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/DeployAgentsTeamReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DeployAgentsTeamResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/ai-agents-teams/deploy/send": {
      "post": {
        "tags": ["AIAgentsTeams"],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/SignedContract"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/ai-agents-teams/{id}/save/prepare": {
      "post": {
        "tags": ["AIAgentsTeams"],
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/CreateAgentsTeamReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SaveAgentsTeamResp"
                }
              }
            }
          }
        }
      }
    },
    "/api/ai-agents-teams/{id}/save/send": {
      "post": {
        "tags": ["AIAgentsTeams"],
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false,
            "explode": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/SignedContract"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Agent": {
        "type": "object",
        "title": "Agent",
        "required": ["id", "version", "name"],
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "shard": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        }
      },
      "AgentHeader": {
        "type": "object",
        "title": "AgentHeader",
        "required": ["id", "version", "name"],
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "shard": {
            "type": "string"
          }
        }
      },
      "Agents": {
        "type": "object",
        "title": "Agents",
        "required": ["agents"],
        "properties": {
          "agents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentHeader"
            }
          }
        }
      },
      "AgentsTeam": {
        "type": "object",
        "title": "AgentsTeam",
        "required": ["id", "version", "name"],
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "shard": {
            "type": "string"
          },
          "graph": {
            "type": "string",
            "format": "graphl"
          }
        }
      },
      "AgentsTeamHeader": {
        "type": "object",
        "title": "AgentsTeamHeader",
        "required": ["id", "version", "name"],
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "shard": {
            "type": "string"
          }
        }
      },
      "AgentsTeams": {
        "type": "object",
        "title": "AgentsTeams",
        "required": ["agents_teams"],
        "properties": {
          "agents_teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentsTeamHeader"
            }
          }
        }
      },
      "Boost": {
        "type": "object",
        "title": "Boost",
        "required": ["id", "username", "direction", "date", "amount", "post"],
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "direction": {
            "$ref": "#/components/schemas/Direction"
          },
          "date": {
            "type": "string",
            "format": "unix-timestamp"
          },
          "amount": {
            "type": "string",
            "format": "int64"
          },
          "post": {
            "type": "string"
          }
        }
      },
      "CreateAgentReq": {
        "type": "object",
        "title": "CreateAgentReq",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string"
          },
          "shard": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        }
      },
      "CreateAgentResp": {
        "type": "object",
        "title": "CreateAgentResp",
        "required": ["id", "version", "contract"],
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "contract": {
            "type": "string",
            "format": "bytes"
          }
        }
      },
      "CreateAgentsTeamReq": {
        "type": "object",
        "title": "CreateAgentsTeamReq",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string"
          },
          "shard": {
            "type": "string"
          },
          "graph": {
            "type": "string",
            "format": "graphl"
          }
        }
      },
      "CreateAgentsTeamResp": {
        "type": "object",
        "title": "CreateAgentsTeamResp",
        "required": ["id", "version", "contract"],
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "contract": {
            "type": "string",
            "format": "bytes"
          }
        }
      },
      "CreateTestwalletResp": {
        "type": "object",
        "title": "CreateTestwalletResp",
        "required": ["key"],
        "properties": {
          "key": {
            "type": "string"
          }
        }
      },
      "DeployAgent": {
        "type": "object",
        "title": "DeployAgent",
        "required": ["id", "version", "address", "phlo_limit"],
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "address": {
            "type": "string",
            "format": "blockchain-address"
          },
          "phlo_limit": {
            "type": "string",
            "format": "int64"
          }
        }
      },
      "DeployAgentReq": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/DeployAgentReq_DeployAgent"
          },
          {
            "$ref": "#/components/schemas/DeployAgentReq_DeployCode"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "Agent": "#/components/schemas/DeployAgentReq_DeployAgent",
            "Code": "#/components/schemas/DeployAgentReq_DeployCode"
          }
        }
      },
      "DeployAgentReq_DeployAgent": {
        "allOf": [
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["Agent"],
                "example": "Agent"
              }
            }
          },
          {
            "$ref": "#/components/schemas/DeployAgent"
          }
        ]
      },
      "DeployAgentReq_DeployCode": {
        "allOf": [
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["Code"],
                "example": "Code"
              }
            }
          },
          {
            "$ref": "#/components/schemas/DeployCode"
          }
        ]
      },
      "DeployAgentResp": {
        "type": "object",
        "title": "DeployAgentResp",
        "required": ["contract"],
        "properties": {
          "contract": {
            "type": "string",
            "format": "bytes"
          }
        }
      },
      "DeployAgentsTeam": {
        "type": "object",
        "title": "DeployAgentsTeam",
        "required": ["id", "version", "address", "phlo_limit"],
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "address": {
            "type": "string",
            "format": "blockchain-address"
          },
          "phlo_limit": {
            "type": "string",
            "format": "int64"
          }
        }
      },
      "DeployAgentsTeamReq": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/DeployAgentsTeamReq_DeployAgentsTeam"
          },
          {
            "$ref": "#/components/schemas/DeployAgentsTeamReq_DeployGraph"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "AgentsTeam": "#/components/schemas/DeployAgentsTeamReq_DeployAgentsTeam",
            "Graph": "#/components/schemas/DeployAgentsTeamReq_DeployGraph"
          }
        }
      },
      "DeployAgentsTeamReq_DeployAgentsTeam": {
        "allOf": [
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["AgentsTeam"],
                "example": "AgentsTeam"
              }
            }
          },
          {
            "$ref": "#/components/schemas/DeployAgentsTeam"
          }
        ]
      },
      "DeployAgentsTeamReq_DeployGraph": {
        "allOf": [
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["Graph"],
                "example": "Graph"
              }
            }
          },
          {
            "$ref": "#/components/schemas/DeployGraph"
          }
        ]
      },
      "DeployAgentsTeamResp": {
        "type": "object",
        "title": "DeployAgentsTeamResp",
        "required": ["name", "contract"],
        "properties": {
          "name": {
            "type": "string"
          },
          "contract": {
            "type": "string",
            "format": "bytes"
          }
        }
      },
      "DeployCode": {
        "type": "object",
        "title": "DeployCode",
        "required": ["code", "phlo_limit"],
        "properties": {
          "code": {
            "type": "string"
          },
          "phlo_limit": {
            "type": "string",
            "format": "int64"
          }
        }
      },
      "DeployGraph": {
        "type": "object",
        "title": "DeployGraph",
        "required": ["graph", "phlo_limit"],
        "properties": {
          "graph": {
            "type": "string",
            "format": "graphl"
          },
          "phlo_limit": {
            "type": "string",
            "format": "int64"
          }
        }
      },
      "DeploySignedTestReq": {
        "type": "object",
        "title": "DeploySignedTestReq",
        "required": ["test"],
        "properties": {
          "env": {
            "$ref": "#/components/schemas/SignedContract"
          },
          "test": {
            "$ref": "#/components/schemas/SignedContract"
          }
        }
      },
      "DeploySignedTestResp": {
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/DeploySignedTestResp_EnvDeployFailed"
          },
          {
            "$ref": "#/components/schemas/DeploySignedTestResp_TestDeployFailed"
          },
          {
            "$ref": "#/components/schemas/DeploySignedTestResp_SignedTestDeployLogs"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "EnvDeployFailed": "#/components/schemas/DeploySignedTestResp_EnvDeployFailed",
            "TestDeployFailed": "#/components/schemas/DeploySignedTestResp_TestDeployFailed",
            "Ok": "#/components/schemas/DeploySignedTestResp_SignedTestDeployLogs"
          }
        }
      },
      "DeploySignedTestResp_EnvDeployFailed": {
        "allOf": [
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["EnvDeployFailed"],
                "example": "EnvDeployFailed"
              }
            }
          },
          {
            "$ref": "#/components/schemas/EnvDeployFailed"
          }
        ]
      },
      "DeploySignedTestResp_SignedTestDeployLogs": {
        "allOf": [
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["Ok"],
                "example": "Ok"
              }
            }
          },
          {
            "$ref": "#/components/schemas/SignedTestDeployLogs"
          }
        ]
      },
      "DeploySignedTestResp_TestDeployFailed": {
        "allOf": [
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["TestDeployFailed"],
                "example": "TestDeployFailed"
              }
            }
          },
          {
            "$ref": "#/components/schemas/TestDeployFailed"
          }
        ]
      },
      "DeployTestReq": {
        "type": "object",
        "title": "DeployTestReq",
        "required": ["test"],
        "properties": {
          "env": {
            "type": "string"
          },
          "test": {
            "type": "string"
          }
        }
      },
      "DeployTestResp": {
        "type": "object",
        "title": "DeployTestResp",
        "required": ["test_contract"],
        "properties": {
          "env_contract": {
            "type": "string",
            "format": "bytes"
          },
          "test_contract": {
            "type": "string",
            "format": "bytes"
          }
        }
      },
      "Direction": {
        "type": "string",
        "enum": ["incoming", "outgoing"]
      },
      "EnvDeployFailed": {
        "type": "object",
        "title": "EnvDeployFailed",
        "required": ["error"],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "Exchange": {
        "type": "object",
        "title": "Exchange"
      },
      "InternalError": {
        "type": "object",
        "title": "InternalError",
        "required": ["description"],
        "properties": {
          "description": {
            "type": "string"
          }
        }
      },
      "Log": {
        "type": "object",
        "title": "Log",
        "required": ["level", "message"],
        "properties": {
          "level": {
            "$ref": "#/components/schemas/LogLevel"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "LogLevel": {
        "type": "string",
        "enum": ["debug", "info", "error"]
      },
      "Request": {
        "type": "object",
        "title": "Request",
        "required": ["id", "date", "amount", "status"],
        "properties": {
          "id": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "unix-timestamp"
          },
          "amount": {
            "type": "string",
            "format": "int64"
          },
          "status": {
            "$ref": "#/components/schemas/RequestStatus"
          }
        }
      },
      "RequestStatus": {
        "type": "string",
        "enum": ["done", "ongoing", "cancelled"]
      },
      "RunDemoReq": {
        "type": "object",
        "title": "RunDemoReq",
        "required": ["name", "prompt"],
        "properties": {
          "name": {
            "type": "string"
          },
          "prompt": {
            "type": "string"
          }
        }
      },
      "SaveAgentResp": {
        "type": "object",
        "title": "SaveAgentResp",
        "required": ["version", "contract"],
        "properties": {
          "version": {
            "type": "string"
          },
          "contract": {
            "type": "string",
            "format": "bytes"
          }
        }
      },
      "SaveAgentsTeamResp": {
        "type": "object",
        "title": "SaveAgentsTeamResp",
        "required": ["version", "contract"],
        "properties": {
          "version": {
            "type": "string"
          },
          "contract": {
            "type": "string",
            "format": "bytes"
          }
        }
      },
      "SignedContract": {
        "type": "object",
        "title": "SignedContract",
        "required": ["contract", "sig", "sig_algorithm", "deployer"],
        "properties": {
          "contract": {
            "type": "string",
            "format": "bytes"
          },
          "sig": {
            "type": "string",
            "format": "bytes"
          },
          "sig_algorithm": {
            "type": "string"
          },
          "deployer": {
            "type": "string",
            "format": "bytes"
          }
        }
      },
      "SignedTestDeployLogs": {
        "type": "object",
        "title": "SignedTestDeployLogs",
        "required": ["logs"],
        "properties": {
          "logs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Log"
            }
          }
        }
      },
      "TestDeployFailed": {
        "type": "object",
        "title": "TestDeployFailed",
        "required": ["error"],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "Transfer": {
        "type": "object",
        "title": "Transfer",
        "required": ["id", "direction", "date", "amount", "to_address", "cost"],
        "properties": {
          "id": {
            "type": "string"
          },
          "direction": {
            "$ref": "#/components/schemas/Direction"
          },
          "date": {
            "type": "string",
            "format": "unix-timestamp"
          },
          "amount": {
            "type": "string",
            "format": "int64"
          },
          "to_address": {
            "type": "string",
            "format": "blockchain-address"
          },
          "cost": {
            "type": "string",
            "format": "uint64"
          }
        }
      },
      "TransferReq": {
        "type": "object",
        "title": "TransferReq",
        "required": ["from", "to", "amount"],
        "properties": {
          "from": {
            "type": "string",
            "format": "blockchain-address"
          },
          "to": {
            "type": "string",
            "format": "blockchain-address"
          },
          "amount": {
            "type": "string",
            "format": "int64"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "TransferResp": {
        "type": "object",
        "title": "TransferResp",
        "required": ["contract"],
        "properties": {
          "contract": {
            "type": "string",
            "format": "bytes"
          }
        }
      },
      "WalletStateAndHistory": {
        "type": "object",
        "title": "WalletStateAndHistory",
        "required": ["balance", "requests", "exchanges", "boosts", "transfers"],
        "properties": {
          "balance": {
            "type": "string",
            "format": "uint64"
          },
          "requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Request"
            }
          },
          "exchanges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Exchange"
            }
          },
          "boosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Boost"
            }
          },
          "transfers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Transfer"
            }
          }
        }
      }
    }
  }
}
